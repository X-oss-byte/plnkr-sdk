{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["const DEFAULT_EDITOR_URL = 'https://next.plnkr.co/edit/';\nconst DEFAULT_EMBED_URL = 'https://embed.plnkr.co';\n\nexport enum EncodingKind {\n    Utf8 = 'utf8',\n    Base64 = 'base64',\n}\n\nexport enum SidebarKind {\n    Preview = 'tree',\n    Config = 'config',\n}\n\nexport enum TargetKind {\n    Blank = '_blank',\n    Self = '_self',\n}\n\nexport type FileContent = string;\nexport type FileEncoding = EncodingKind;\nexport type FilePath = string;\n\nexport type PreviewIdentifier = 'preview';\n\nexport type ProjectTitle = string;\nexport type ProjectTag = string;\n\nexport interface FileSpecification {\n    pathname: FilePath;\n    content: FileContent;\n    encoding?: FileEncoding;\n}\n\nexport interface ProjectSpecification {\n    files: FileSpecification[];\n    title?: ProjectTitle;\n    tags?: ProjectTag[];\n}\n\nexport interface EditorProjectSpecification extends ProjectSpecification {}\n\nexport interface EmbedProjectSpecification extends ProjectSpecification {\n    source?: {\n        type: string;\n        url: string;\n    };\n}\n\nexport interface DynamicOptions {\n    parentEl?: string | HTMLElement;\n    preview?: FilePath;\n    show?: (FilePath | PreviewIdentifier)[];\n    sidebar?: SidebarKind;\n    target?: TargetKind;\n}\n\nexport interface DynamicEditorOptions extends DynamicOptions {\n    editorUrl?: string;\n}\n\nexport interface DynamicEmbedOptions extends DynamicOptions {\n    autoCloseSidebar?: boolean;\n    deferRun?: boolean;\n    embedUrl?: string;\n}\n\nfunction buildDynamicEditorQueryString(options: DynamicEditorOptions): string {\n    if (\n        options.show &&\n        (!Array.isArray(options.show) ||\n            !options.show.every(show => show && typeof show === 'string'))\n    )\n        throw new TypeError(\n            'options.show, if specified, must be an array containing a list of filename fragments and/or \"preview\"'\n        );\n\n    if (options.preview && typeof options.preview !== 'string')\n        throw new TypeError('options.preview, if specified, must be a string');\n\n    if (\n        options.sidebar &&\n        Object.values(SidebarKind).indexOf(options.sidebar) === -1\n    )\n        throw new TypeError(\n            `options.sidebar, if specified, must be one of the following values ${Object.values(\n                SidebarKind\n            ).join(', ')}`\n        );\n\n    const query = [];\n\n    if (options.preview) {\n        query.push(`preview=${encodeURIComponent(options.preview)}`);\n    }\n\n    if (options.show) {\n        query.push(`open=${options.show.map(encodeURIComponent).join(',')}`);\n    }\n\n    if (options.sidebar) {\n        query.push(`sidebar=${encodeURIComponent(options.sidebar)}`);\n    }\n\n    return query.length ? `?${query.join('&')}` : '';\n}\n\nfunction buildDynamicEmbedQueryString(options: DynamicEmbedOptions): string {\n    if (\n        options.show &&\n        (!Array.isArray(options.show) ||\n            !options.show.every(show => show && typeof show === 'string'))\n    )\n        throw new TypeError(\n            'options.show, if specified, must be an array containing a list of filename fragments and/or \"preview\"'\n        );\n\n    if (options.preview && typeof options.preview !== 'string')\n        throw new TypeError('options.preview, if specified, must be a string');\n\n    if (\n        options.sidebar &&\n        Object.values(SidebarKind).indexOf(options.sidebar) === -1\n    )\n        throw new TypeError(\n            `options.sidebar, if specified, must be one of the following values ${Object.values(\n                SidebarKind\n            ).join(', ')}`\n        );\n\n    const query = [];\n\n    if (options.autoCloseSidebar) {\n        query.push('autoCloseSidebar');\n    } else if (options.autoCloseSidebar === false) {\n        query.push('autoCloseSidebar=false');\n    }\n\n    if (options.deferRun) {\n        query.push('deferRun');\n    } else if (options.deferRun === false) {\n        query.push('deferRun=false');\n    }\n\n    if (options.preview) {\n        query.push(`preview=${encodeURIComponent(options.preview)}`);\n    }\n\n    if (options.show) {\n        query.push(`show=${options.show.map(encodeURIComponent).join(',')}`);\n    }\n\n    if (options.sidebar) {\n        query.push(`sidebar=${encodeURIComponent(options.sidebar)}`);\n    }\n\n    return query.length ? `?${query.join('&')}` : '';\n}\n\nfunction normalizeProject(\n    projectSpec: ProjectSpecification\n): ProjectSpecification {\n    if (!Array.isArray(projectSpec.files))\n        throw new TypeError('projectSpec.files must be an array');\n    if (!projectSpec.files.length)\n        throw new TypeError('projectSpec.files must have at least one file');\n    if (\n        projectSpec.tags &&\n        (!Array.isArray(projectSpec.tags) ||\n            !projectSpec.tags.every(tag => typeof tag === 'string'))\n    )\n        throw new TypeError(\n            'projectSpec.tags, if specified, must be an array of strings'\n        );\n\n    const files = projectSpec.files.map(validateProjectFile);\n    const uniquePathnames = new Set();\n    const tags = Array.from(new Set(projectSpec.tags || []));\n\n    for (const file of files) {\n        if (uniquePathnames.has(file.pathname)) {\n            throw new TypeError(\n                'projectSpec.files must not contain two files having equivalent pathnames'\n            );\n        }\n\n        uniquePathnames.add(file.pathname);\n    }\n\n    return {\n        files,\n        title: projectSpec.title || 'Untitled project',\n        tags,\n    };\n}\n\nfunction validateProjectFile(\n    projectFile: FileSpecification\n): FileSpecification {\n    if (typeof projectFile.pathname !== 'string')\n        throw new TypeError('projectSpec.files.pathname must be a string');\n    if (\n        projectFile.encoding &&\n        !(\n            projectFile.encoding === EncodingKind.Base64 ||\n            projectFile.encoding === EncodingKind.Utf8\n        )\n    )\n        throw new TypeError(\n            `projectSpec.files.pathname must be one of ${Object.values(\n                EncodingKind\n            ).join(', ')}`\n        );\n    if (typeof projectFile.content !== 'string')\n        throw new TypeError('projectSpec.files.content must be a string');\n\n    const pathname = projectFile.pathname\n        .split('/')\n        .filter(Boolean)\n        .join('/');\n\n    return {\n        pathname,\n        content: projectFile.content,\n        encoding: projectFile.encoding || EncodingKind.Utf8,\n    };\n}\n\nexport function showDynamicEditor(\n    projectSpec: EditorProjectSpecification,\n    options: DynamicEditorOptions = {}\n): void {\n    if (options.editorUrl && typeof options.editorUrl !== 'string')\n        throw new TypeError(\n            'options.editorUrl, if specified, must be a string'\n        );\n\n    if (\n        options.target &&\n        Object.values(TargetKind).indexOf(options.target) === -1\n    )\n        throw new TypeError(\n            `options.target, if specified, must be one of the following values ${Object.values(\n                TargetKind\n            ).join(', ')}`\n        );\n\n    if (\n        options.parentEl &&\n        !(\n            typeof options.parentEl === 'string' ||\n            options.parentEl instanceof HTMLElement\n        )\n    )\n        throw new TypeError(\n            'options.parentEl, if specified, must be a string or an instance of an HTMLElement'\n        );\n\n    if (options.parentEl && options.target)\n        throw new TypeError(\n            'options.parentEl is incompatible with options.target'\n        );\n\n    const projectDef = normalizeProject(projectSpec);\n    const query = buildDynamicEmbedQueryString(options);\n    const form = window.document.createElement('form');\n    const input = window.document.createElement('input');\n\n    form.style.display = 'none';\n    input.type = 'hidden';\n\n    const setArrayField = (path: string | string[], values: string[]) => {\n        if (typeof path === 'string') path = path.split('.');\n\n        path.push('');\n\n        values.forEach(function(value) {\n            setField(path, value);\n        });\n    };\n\n    const setField = (path: string | string[], value: string) => {\n        if (typeof path === 'string') path = path.split('.');\n\n        const name =\n            path.shift() + path.map(segment => '[' + segment + ']').join('');\n\n        input.name = name;\n        input.value = value;\n\n        form.appendChild(input.cloneNode());\n    };\n\n    setArrayField('tags', projectDef.tags);\n    setField('title', projectDef.title);\n\n    for (const file of projectDef.files) {\n        setField(['entries', file.pathname, 'content'], file.content);\n        setField(['entries', file.pathname, 'encoding'], file.encoding);\n    }\n\n    let target: string = options.target || '_blank';\n\n    if (options.parentEl) {\n        const containerEl =\n            typeof options.parentEl === 'string'\n                ? document.getElementById(options.parentEl)\n                : options.parentEl;\n\n        if (!(containerEl instanceof HTMLElement))\n            throw new Error(\n                `Unable to resolve ${options.parentEl} to an html element`\n            );\n\n        target = `plnkr-${Math.random()\n            .toString(36)\n            .slice(2)}`;\n\n        const iframe = document.createElement('iframe');\n\n        iframe.setAttribute('frameborder', '0');\n        iframe.setAttribute('height', '100%');\n        iframe.setAttribute('name', target);\n        iframe.setAttribute('scrolling', 'no');\n        iframe.setAttribute('width', '100%');\n\n        iframe.style.minHeight = '250px';\n        iframe.style.overflow = 'hidden';\n        iframe.style.width = '100%';\n\n        containerEl.appendChild(iframe);\n    }\n\n    const editorUrl = options.editorUrl\n        ? options.editorUrl.replace(/\\/$/, '')\n        : DEFAULT_EDITOR_URL;\n\n    form.action = `${editorUrl}/${query}`;\n    form.method = 'POST';\n    form.target = target;\n\n    document.body.appendChild(form);\n\n    form.submit();\n\n    document.body.removeChild(form);\n}\n\nexport function showDynamicEmbed(\n    projectSpec: EmbedProjectSpecification,\n    options: DynamicEmbedOptions = {}\n): void {\n    if (\n        typeof projectSpec.source === 'object' &&\n        (!projectSpec.source ||\n            typeof projectSpec.source.type !== 'string' ||\n            !projectSpec.source.type ||\n            typeof projectSpec.source.url !== 'string' ||\n            !projectSpec.source.url)\n    )\n        throw new TypeError(\n            'projectSpec.source, if specified, must be an object with non-empty values for the type and url properties'\n        );\n\n    if (options.embedUrl && typeof options.embedUrl !== 'string')\n        throw new TypeError('options.embedUrl, if specified, must be a string');\n\n    if (\n        options.target &&\n        Object.values(TargetKind).indexOf(options.target) === -1\n    )\n        throw new TypeError(\n            `options.target, if specified, must be one of the following values ${Object.values(\n                TargetKind\n            ).join(', ')}`\n        );\n\n    if (\n        options.parentEl &&\n        !(\n            typeof options.parentEl === 'string' ||\n            options.parentEl instanceof HTMLElement\n        )\n    )\n        throw new TypeError(\n            'options.parentEl, if specified, must be a string or an instance of an HTMLElement'\n        );\n\n    if (options.parentEl && options.target)\n        throw new TypeError(\n            'options.parentEl is incompatible with options.target'\n        );\n\n    const projectDef = normalizeProject(projectSpec);\n    const query = buildDynamicEmbedQueryString(options);\n    const form = window.document.createElement('form');\n    const input = window.document.createElement('input');\n\n    form.style.display = 'none';\n    input.type = 'hidden';\n\n    const setArrayField = (path: string | string[], values: string[]) => {\n        if (typeof path === 'string') path = path.split('.');\n\n        path.push('');\n\n        values.forEach(function(value) {\n            setField(path, value);\n        });\n    };\n\n    const setField = (path: string | string[], value: string) => {\n        if (typeof path === 'string') path = path.split('.');\n\n        const name =\n            path.shift() + path.map(segment => '[' + segment + ']').join('');\n\n        input.name = name;\n        input.value = value;\n\n        form.appendChild(input.cloneNode());\n    };\n\n    setArrayField('tags', projectDef.tags);\n    setField('title', projectDef.title);\n\n    for (const file of projectDef.files) {\n        setField(['entries', file.pathname, 'content'], file.content);\n        setField(['entries', file.pathname, 'encoding'], file.encoding);\n    }\n\n    if (projectSpec.source) {\n        setField('source.type', projectSpec.source.type);\n        setField('source.url', projectSpec.source.url);\n    }\n\n    let target: string = options.target || '_blank';\n\n    if (options.parentEl) {\n        const containerEl =\n            typeof options.parentEl === 'string'\n                ? document.getElementById(options.parentEl)\n                : options.parentEl;\n\n        if (!(containerEl instanceof HTMLElement))\n            throw new Error(\n                `Unable to resolve ${options.parentEl} to an html element`\n            );\n\n        target = `plnkr-${Math.random()\n            .toString(36)\n            .slice(2)}`;\n\n        const iframe = document.createElement('iframe');\n\n        iframe.setAttribute('frameborder', '0');\n        iframe.setAttribute('height', '100%');\n        iframe.setAttribute('name', target);\n        iframe.setAttribute('scrolling', 'no');\n        iframe.setAttribute('width', '100%');\n\n        iframe.style.minHeight = '250px';\n        iframe.style.overflow = 'hidden';\n        iframe.style.width = '100%';\n\n        containerEl.appendChild(iframe);\n    }\n\n    const embedUrl = options.embedUrl\n        ? options.embedUrl.replace(/\\/$/, '')\n        : DEFAULT_EMBED_URL;\n\n    form.action = `${embedUrl}/${query}`;\n    form.method = 'POST';\n    form.target = target;\n\n    document.body.appendChild(form);\n\n    form.submit();\n\n    document.body.removeChild(form);\n}\n"],"names":["EncodingKind","SidebarKind","TargetKind"],"mappings":"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"}